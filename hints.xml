<?xml version="1.0" encoding="UTF-8"?>
<hints>
  <hint>You can edit cached resources for any rom by using the '--cache edit' command line option. You can add file names at the end of the command line to edit resources for just those roms, or you can use the '--startat' and '--endat' options to edit a span of roms. Otherwise all roms in the input folder will be edited one by one.</hint>
  <hint>Pretty much any command line option can also be set in the '/home/USER/.steamscraper/config.ini' file. That way you don't have to type them on the command line all the time. You can also set a custom config.ini using the '-c' option.</hint>
  <hint>The '/home/USER/.steamscraper/config.ini' file contain sections for both main, platform specific and scraping module specific configurations. So if you, for instance, want a certain option to only be applied when scraping a certain platform, just add it to a platform specific section. Check the example at '/home/USER/.steamscraper/config.ini.example'.</hint>
  <hint>You can customize the artwork Steamscraper outputs completely by editing the '/home/USER/.steamscraper/artwork.xml' file. Check the full documentation online at https://github.com/withertech/steamscraper/blob/master/docs/ARTWORK.md. You can even set a custom artwork.xml per platform if you want in '/home/USER/.steamscraper/config.ini'.</hint>
  <hint>You can force a refresh of the locally cached data using the '--refresh' option. Steamscraper will then refetch the requested entries from the scraping sources, instead of loading it from cache. Sort of like Ctrl+F5 in a browser.</hint>
  <hint>Steamscraper caches all scraped data in the resource cache. This saves bandwidth for the scraping sources as any rescaping will make use of this cache instead of pounding the servers again.</hint>
  <hint>You can import your own data into the resource cache using the 'import' module. You can import both textual and media data. Read more about this at https://github.com/withertech/steamscraper/tree/master/import.</hint>
  <hint>You can prioritize the sources of each resource type by editing the '/home/USER/.steamscraper/cache/&lt;PLATFORM&gt;/priorities.xml'. Each resource type has a node with source nodes inside. If you want to prioritize a certain source for a certain resource type, just move it to the top or add it if it's not already there.</hint>
  <hint>You can turn off these hints using the '--flags nohints' command line flag.</hint>
  <hint>You can force Steamscraper to never apply any bracket notes (such as '(Europe)' or '[aga]') to the game names by using the '--flags nobrackets' command line flag.</hint>
  <hint>If you don't like the returned titles of your games, you can either import your own with the '-s import' module or force it to use the filenames with the '--flags forcefilename' command line flag.</hint>
  <hint>You can scrape a single game by adding it to the command line either with partial or full path. You can also scrape a span of games with the '--startat' and '--endat' command line options.</hint>
  <hint>With the '--cache show' command line option, you can check the status of the resources that are cached for the platform you are scraping.</hint>
  <hint>You can use the '--help' command line option to view all available options. Most of these can also be set in the '/home/USER/.steamscraper/config.ini'. Check the '/home/USER/.steamscraper/config.ini.example' file for all available options.</hint>
  <hint>You can set custom input/rom, game list and media folders using the '-i', '-g' and '-o' command line options.</hint>
  <hint>Steamscraper can create game lists for multiple frontends. Check the full list with '--help' and look for the '-f' command line option.</hint>
  <hint>You can enable Steamscraper's interactive mode by setting the flag '--flags interactive'. When this is set Steamscraper will ask the user to choose the best entries when using a search based scraping module.</hint>
  <hint>If you have all of your roms on an external harddrive, you can set the 'inputFolder' option in the '[main]' section of '/home/USER/.steamscraper/config.ini'. Then it will always use this location as the base path for all platforms.</hint>
  <hint>If you've manually compressed your roms (zip or 7z), you can use the '--flags unpack' flag to tell Steamscraper to checksum the roms inside the compressed file instead of the compressed file itself. This is only relevant when scraping with the 'screenscraper' scraping module.</hint>
  <hint>You can vacuum the Steamscraper cache. This removes all cached resources that don't match any files in your current romset for the selected platform. You can do this by running "Steamscraper -p &lt;PLATFORM&gt; --cache vacuum".</hint>
  <hint>If you use videos and want to save some space, you can use the "--flags symlink" flag to force Steamscraper to link the videos from the cache to the destination instead of copying them. Beware that removing the files from the cache will break the links though.</hint>
  <hint>You can import data from an EmulationStation gamelist.xml file using the "-s esgamelist" scraping module. This way you can use other scrapers to generate a gamelist.xml and then import the data into Steamscraper if you wish.</hint>
  <hint>If you are having trouble scraping a game with a long name, consider adding an alias for it to the "/home/USER/.steamscraper/aliasMap.csv" file. Open the file in an editor to read more on how to this works.</hint>
  <hint>You can create reports for all files missing certain resources in the cache using the '--cache report:missing=&lt;GROUP or RESOURCE1,RESOURCE2,...&gt; option. Great ways to add missing resources that the online sources are having trouble providing are the '--cache edit' option or the '-s import' module.</hint>
  <hint>Using the '--flags theinfront' flag you can force Steamscraper to always move 'The' to the front of the game titles, regardless of how it was returned from the scraping sources.</hint>
</hints>
